#!/usr/bin/env bash
# Changes the port configuration in Nginx from 8080 to 80 and restarts the Nginx service

# Update package list and install Nginx if not installed
sudo apt-get update
sudo apt-get install -y nginx

# Function to update Nginx configuration
update_nginx_config() {
  local config_file=$1
  if grep -q '8080' "$config_file"; then
    sudo sed -i 's/8080/80/g' "$config_file"
  fi
  if grep -q 'listen \[::\]:80 default_server;' "$config_file"; then
    sudo sed -i 's/listen \[::\]:80 default_server;/listen \[::\]:80;/g' "$config_file"
  fi
}

# Update Nginx configuration in both sites-available and sites-enabled
update_nginx_config /etc/nginx/sites-available/default
update_nginx_config /etc/nginx/sites-enabled/default

# Check Nginx configuration syntax before restarting
sudo nginx -t

# Restart Nginx service to apply changes
if sudo systemctl restart nginx; then
  echo "Nginx restarted successfully"
else
  echo "Failed to restart Nginx. Exiting."
  exit 1
fi

# Enable Nginx to start on boot
sudo systemctl enable nginx

# Wait a few seconds for Nginx to fully start
sleep 5

# Check if Nginx is running and listening on port 80
for i in {1..5}; do
  status_code=$(curl -o /dev/null -s -w "%{http_code}\n" http://localhost)
  if [ "$status_code" -eq 200 ]; then
    echo "Nginx is running and serving HTTP 200 on port 80"
    exit 0
  else
    echo "Attempt $i: Nginx is not serving HTTP 200 on port 80. Status code: $status_code"
    sleep 2
  fi
done

echo "Nginx did not start correctly on port 80. Exiting."
exit 1

